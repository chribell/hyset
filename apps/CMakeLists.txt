set(CMAKE_CUDA_STANDARD 11)
set( CMAKE_VERBOSE_MAKEFILE on )
set(SM_ARCH 61 CACHE STRING "CUDA SM architecture e.g. 50, 52, 61")
set(CMAKE_CUDA_ARCHITECTURES OFF)

set(NVCC_FLAGS --expt-extended-lambda --expt-relaxed-constexpr -gencode arch=compute_${SM_ARCH},code=sm_${SM_ARCH})

if(PROFILE_GEN)
    set(CMAKE_CUDA_FLAGS "-g -pg")
endif()

add_executable(cost-model cost_model.cu)
target_compile_features(cost-model PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(cost-model PRIVATE -pg)
endif()
target_link_libraries(cost-model PRIVATE holset cxxopts nlohmann_json::nlohmann_json fmt::fmt)
set_target_properties(cost-model PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_executable(dichotomy dichotomy.cu)
target_compile_features(dichotomy PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(dichotomy PRIVATE -pg)
endif()
target_link_libraries(dichotomy PRIVATE holset cxxopts fmt::fmt)
set_target_properties(dichotomy PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_executable(hybrid hybrid.cu)
target_compile_features(hybrid PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(hybrid PRIVATE -pg)
endif()
target_link_libraries(hybrid PRIVATE holset cxxopts fmt::fmt)
set_target_properties(hybrid PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_executable(cpu cpu.cu)
target_compile_features(cpu PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(cpu PRIVATE -pg)
endif()
target_link_libraries(cpu PRIVATE holset cxxopts fmt::fmt)
set_target_properties(cpu PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_executable(fgss fgss.cu)
target_compile_features(fgss PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(fgss PRIVATE -pg)
endif()
target_link_libraries(fgss PRIVATE holset cxxopts fmt::fmt)
set_target_properties(fgss PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_executable(bitmap bitmap.cu)
target_compile_features(bitmap PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(bitmap PRIVATE -pg)
endif()
target_link_libraries(bitmap PRIVATE holset cxxopts fmt::fmt)
set_target_properties(bitmap PROPERTIES CUDA_SEPARABLE_COMPILATION ON)

add_executable(queue queue.cu)
target_compile_features(queue PRIVATE cxx_std_11)
if(PROFILE_GEN)
    target_link_options(queue PRIVATE -pg)
endif()
target_link_libraries(queue PRIVATE holset cxxopts fmt::fmt)
set_target_properties(queue PROPERTIES CUDA_SEPARABLE_COMPILATION ON)